{"version":3,"sources":["logo.svg","pages/About.jsx","pages/Contact.jsx","pages/Portfolio.jsx","pages/Blog.jsx","pages/Home.jsx","components/ResponsiveNavigation.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","About","react_default","a","createElement","Component","Contact","Portfolio","Blog","Home","ResponsiveNavigation","_ref","background","hoverBackground","linkColor","navLinks","logo","_useState","useState","_useState2","Object","slicedToArray","navOpen","setNavOpen","_useState3","_useState4","hoverIndex","setHoverIndex","className","style","onClick","src","height","width","alt","map","link","index","key","onMouseEnter","onMouseLeave","es","to","path","color","text","icon","App","components_ResponsiveNavigation","pages_Contact","pages_Home","pages_Portfolio","pages_Blog","pages_About","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yQCUzBC,mLANP,OACIC,EAAAC,EAAAC,cAAA,2BAHQC,aCQLC,mLANP,OACIJ,EAAAC,EAAAC,cAAA,6BAHUC,aCQPE,mLANP,OACIL,EAAAC,EAAAC,cAAA,+BAHYC,aCQTG,mLANP,OACIN,EAAAC,EAAAC,cAAA,0BAHOC,aCQJI,mLANP,OACIP,EAAAC,EAAAC,cAAA,0BAHOC,oBCmCJK,MAlCf,SAAAC,GAA0F,IAA1DC,EAA0DD,EAA1DC,WAAYC,EAA8CF,EAA9CE,gBAAiBC,EAA6BH,EAA7BG,UAAWC,EAAkBJ,EAAlBI,SAAUC,EAAQL,EAARK,KAAQC,EACtDC,mBAAS,GAD6CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9EK,EAD8EH,EAAA,GACrEI,EADqEJ,EAAA,GAAAK,EAEhDN,oBAAU,GAFsCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE9EE,EAF8ED,EAAA,GAElEE,EAFkEF,EAAA,GAGtF,OACIvB,EAAAC,EAAAC,cAAA,OACIwB,UAAU,qBACVC,MAAO,CAAEjB,WAAYA,IACrBV,EAAAC,EAAAC,cAAA,MACIyB,MAAO,CAAEjB,WAAYA,GACrBgB,UAAYN,EAAU,SAAW,IAEjCpB,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,aAAaE,QAAU,WAAQP,GAAYD,KACzDpB,EAAAC,EAAAC,cAAA,OAAK2B,IAAMf,EAAOgB,OAAO,OAAOC,MAAM,OAAOC,IAAI,kBAEnDnB,EAASoB,IAAI,SAACC,EAAMC,GAAP,OACXnC,EAAAC,EAAAC,cAAA,MACIkC,IAAMD,EACNE,aAAe,WAAQZ,EAAcU,IACrCG,aAAe,WAAQb,GAAe,IACtCE,MAAO,CAAEjB,WAAYc,IAAeW,EAASxB,GAAmB,OAAU,KAE1EX,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACIC,GAAIN,EAAKO,KACTd,MAAO,CAAEe,MAAO9B,IAFpB,MAGMsB,EAAKS,KACP3C,EAAAC,EAAAC,cAAA,KAAGwB,UAAYQ,EAAKU,qCC+BjCC,MAhDf,WA6BC,OACC7C,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,OACd1B,EAAAC,EAAAC,cAAC4C,EAAD,CACCjC,SA/Bc,CAChB,CACC8B,KAAM,OACNF,KAAM,IACNG,KAAM,gBAEP,CACCD,KAAM,UACNF,KAAM,WACNG,KAAM,qBAEP,CACCD,KAAM,QACNF,KAAM,SACNG,KAAM,oBAEP,CACCD,KAAM,OACNF,KAAM,QACNG,KAAM,mBAEP,CACCD,KAAM,YACNF,KAAM,aACNG,KAAM,sBAQL9B,KAAOA,IACPJ,WAAW,OACXC,gBAAgB,OAChBC,UAAU,SAEXZ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACCvC,EAAAC,EAAAC,cAAC6C,EAAD,CAASN,KAAK,aACdzC,EAAAC,EAAAC,cAAC8C,EAAD,CAAMP,KAAK,UACXzC,EAAAC,EAAAC,cAAC+C,EAAD,CAAWR,KAAK,eAChBzC,EAAAC,EAAAC,cAACgD,EAAD,CAAMT,KAAK,UACXzC,EAAAC,EAAAC,cAACiD,EAAD,CAAOV,KAAK,cC1CIW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b947b3e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\n\nclass About extends Component {\n    render () {\n        return (\n            <div>About</div>\n        )\n    }\n}\n\nexport default About","import React, { Component } from 'react'\n\nclass Contact extends Component {\n    render () {\n        return (\n            <div>Contact</div>\n        )\n    }\n}\n\nexport default Contact","import React, { Component } from 'react'\n\nclass Portfolio extends Component {\n    render () {\n        return (\n            <div>Portfolio</div>\n        )\n    }\n}\n\nexport default Portfolio","import React, { Component } from 'react'\n\nclass Blog extends Component {\n    render () {\n        return (\n            <div>Blog</div>\n        )\n    }\n}\n\nexport default Blog","import React, { Component } from 'react'\n\nclass Home extends Component {\n    render () {\n        return (\n            <div>Home</div>\n        )\n    }\n}\n\nexport default Home","import React, { useState } from 'react';\nimport { Link } from \"@reach/router\";\n\nfunction ResponsiveNavigation({ background, hoverBackground, linkColor, navLinks, logo }) {\n    const [ navOpen, setNavOpen ] = useState(0)\n    const [ hoverIndex, setHoverIndex ] = useState(-1)\n    return (\n        <nav\n            className=\"responsive-toolbar\"\n            style={{ background: background }}>\n            <ul\n                style={{ background: background }}\n                className={ navOpen ? 'active' : '' }\n            >\n                <figure className=\"image-logo\" onClick={ () => { setNavOpen(!navOpen) } }>\n                    <img src={ logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\n                </figure>\n                { navLinks.map((link, index) => \n                    <li\n                        key={ index }\n                        onMouseEnter={ () => { setHoverIndex(index) } }\n                        onMouseLeave={ () => { setHoverIndex(-1) } }\n                        style={{ background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\n                    >\n                        <Link\n                            to={link.path}\n                            style={{ color: linkColor }}\n                        >   { link.text }\n                            <i className={ link.icon } />\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    )\n}\n\nexport default ResponsiveNavigation","import React from 'react';\nimport { Router } from '@reach/router'\nimport About from './pages/About.jsx'\nimport Contact from './pages/Contact.jsx'\nimport Portfolio from './pages/Portfolio.jsx'\nimport Blog from './pages/Blog.jsx'\nimport Home from './pages/Home.jsx'\nimport ResponsiveNavigation from './components/ResponsiveNavigation'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\tconst navLinks = [\n\t\t{\n\t\t\ttext: 'Home',\n\t\t\tpath: '/',\n\t\t\ticon: 'ion-ios-home'\n\t\t},\n\t\t{\n\t\t\ttext: 'Contact',\n\t\t\tpath: '/contact',\n\t\t\ticon: 'ion-ios-megaphone'\n\t\t},\n\t\t{\n\t\t\ttext: 'About',\n\t\t\tpath: '/about',\n\t\t\ticon: 'ion-ios-business'\n\t\t},\n\t\t{\n\t\t\ttext: 'Blog',\n\t\t\tpath: '/blog',\n\t\t\ticon: 'ion-ios-bonfire'\n\t\t},\n\t\t{\n\t\t\ttext: 'Portfolio',\n\t\t\tpath: '/portfolio',\n\t\t\ticon: 'ion-ios-briefcase'\n\t\t}\n\t]\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ResponsiveNavigation\n\t\t\t\tnavLinks={ navLinks }\n\t\t\t\tlogo={ logo }\n\t\t\t\tbackground=\"#fff\"\n\t\t\t\thoverBackground=\"#ddd\"\n\t\t\t\tlinkColor=\"#777\"\n\t\t\t/>\n\t\t\t<Router>\n\t\t\t\t<Contact path=\"/contact\" />\n\t\t\t\t<Home path=\"/home\" />\n\t\t\t\t<Portfolio path=\"/portfolio\" />\n\t\t\t\t<Blog path=\"/blog\" />\n\t\t\t\t<About path=\"/about\" />\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/scss/base.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}